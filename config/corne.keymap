/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ___ &trans
#define KP_STAR KP_MULTIPLY

#define BASE 0
#define NUM 1
#define SYM 2
#define NAV 3
#define RDL 4

&lt {
    quick_tap_ms = <150>;
};

/ {

        #include "combos.dtsi"

        // chosen {
        //     zmk,matrix_transform = &five_column_transform;
        // };

        behaviors {

            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <180>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  -   |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  '  |  ;   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  \   |
//                    | ESC | TAB | SPC |   | ENT | BSPC | DEL |
                        bindings = <
 &none  &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P &none
 &none  &hm LGUI A &hm LALT S &hm LSHFT D &hm LCTRL F &kp G   &kp H &hm RCTRL J &hm RSHFT K &hm LALT L &hm RGUI SQT &none
 &none  &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &none
         &kp ESC &lt SYM TAB &lt NAV SPACE   &kp RET &lt NUM BSPC &kp DEL
                        >;
                };

                number_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |     |     |     |     |     |      |
// |      |  1  |  2  |  3  |  4  |  5  |   |     |     |     |     |     |      |
// |      |  6  |  7  |  8  |  9  |  0  |   |     |     |     |     |     |      |
//                    |     |  -  |  .  |   |     |     |     |
                        bindings = <
 &none  &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT   &trans   &trans   &trans &trans    &trans &none
 &none  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5      &trans   &trans   &trans &trans    &trans &none
 &none  &kp N6       &kp N7       &kp N8       &kp N9       &kp N0      &trans   &trans   &trans &trans    &trans &none
                          &trans       &kp MINUS    &kp DOT      &trans   &trans   &trans
                        >;
                };
    symbol_layer {
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┼─────────────┬─────────────┬─────────────╮
 &none       ___           ___           ___           ___           ___               &kp TILDE     &kp LBKT      &kp KP_STAR   &kp RBKT      &kp EQUAL      &none
        // ├─────────────┼─────────────┼─────────────┬─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
 &none       ___           ___           ___           ___           ___               &kp CARET     &kp LPAR      &kp AMPS      &kp RPAR      &kp MINUS      &none
        // ├─────────────┼─────────────┼─────────────┬─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
 &none       ___           ___           ___           ___           ___               &kp GRAVE     &kp LBRC      &kp PIPE      &kp RBRC      &kp PLUS       &none
        // ╰─────────────┴─────────────┼─────────────┬─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                         ___           ___           ___               &kp ESC       &kp ESC       ___
        //                             ╰─────────────┴─────────────┬─────────────╯   ╰─────────────┼─────────────┴─────────────╯
      >;
    };
    navigation_layer {
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┼─────────────┬─────────────┬─────────────╮
 &none       ___           ___           ___           ___           ___               &kp LA(B)     ___           ___           &kp LA(F)     ___            &none
        // ├─────────────┼─────────────┼─────────────┬─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
 &none       ___           ___           ___           ___           ___               &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp SEMI       &none
        // ├─────────────┼─────────────┼─────────────┬─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
 &none       ___           ___           ___           ___           ___               &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &kp BSLH       &none
        // ╰─────────────┴─────────────┼─────────────┬─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                         ___           ___           ___               &kp ESC       &kp ESC       ___
        //                             ╰─────────────┴─────────────┬─────────────╯   ╰─────────────┼─────────────┴─────────────╯
      >;
    };
    readline_layer {
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┼─────────────┬─────────────┬─────────────╮
 &none       ___           ___           ___           ___           ___               &kp LA(BSPC)  ___           ___           &kp LA(D)     ___            &none
        // ├─────────────┼─────────────┼─────────────┬─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
 &none       ___           ___           ___           ___           ___               &kp BSPC      ___           ___           &kp DEL       ___            &none
        // ├─────────────┼─────────────┼─────────────┬─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
 &none       ___           ___           ___           ___           ___               &kp LC(U)     &kp LC(S)     &kp LC(R)     &kp LC(K)     ___            &none
        // ╰─────────────┴─────────────┼─────────────┬─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                         ___           ___           ___               ___           ___           ___
        //                             ╰─────────────┴─────────────┬─────────────╯   ╰─────────────┼─────────────┴─────────────╯
      >;
    };
  };
};
